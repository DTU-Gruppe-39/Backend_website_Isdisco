@{
    ViewData["Title"] = "Blacklist";

    Singleton instance = Singleton.getInstance();


    //instance.InitBlacklist();
    List<BlacklistModel> blacklist = new List<BlacklistModel>();


    if (!instance.GetBlacklist().Any<BlacklistModel>())
    {
        instance.InitBlacklist();
        blacklist = instance.GetBlacklist();
        Console.WriteLine("InitBlacklist");
    }
    else
    {
        blacklist = instance.GetBlacklist();
    }

    /*
     <a href="#" title= "blacklist song" onclick="blacklist(this, '@Request.Track.Track_id','@Request.Track.Title','@Request.Track.Artist', '@Request.Track.Spotify_webplayer_link')">
                <img src= "https://image.flaticon.com/icons/svg/61/61057.svg" width="24">
    */
}


<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
<style>
    body {
        background-color: #e9ebee;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 80%;
        margin-left: auto;
        margin-right: auto;
        background-color: white;
        border-radius: 10px;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f4f5f4;
    }

    .material-icons {
        align: auto;
        border: none;
        background-color: transparent;
    }

        .material-icons:hover {
            color: red;
            transition: 0.2s;
        }
</style>



<script>
    function loadBlacklist() {
        $.ajax('https://localhost:44342/api/blacklist', {
            crossDomain: 'true',
            headers: { 'Access-Control-Allow-Origin': '*' },
            method: 'get',
            dataType: 'text',
            contentType: 'application/json',
            success: function (response) {
       //         alert(response);
                var rec = JSON.parse(response);
                console.log(rec);
                var tracks = rec.Blacklist;
                var table = document.getElementById("blacklist");
                for (var i = table.rows.length - 1; i > 0; i--) {
                    table.deleteRow(i);
                }
                rec.forEach(function (entry) {
                    console.log("Blacklist: "+ rec["track"]);
                    $("#blacklist").append("<tr>" + "<td>" + entry.track["songName"] + "</td>" + "<td>" + entry.track["artistName"] + "</td>" + "<td>" + "<button class=\"material-icons\" onclick=\"Remove(this) \">delete</button>" + "</a>" + "</td>" + "<td>" + entry.id + "</td>" + "</tr>");
                });
            },
            error: function (xhr, status, error) {
                alert(status);
                alert(xhr.responseText + " " + song);

            }
        });
    }

    function Remove(button){
          var i = button.parentNode.parentNode.rowIndex;
          var id = blacklist.rows[i].cells[3].innerHTML;
          if(confirm("Vil du fjerne den fra blacklist?")){
            $.ajax('https://localhost:44342/api/blacklist/'+id , {
            crossDomain: 'true',
            headers:{'Access-Control-Allow-Origin':'*'},
            method: 'delete',
            data: id,
            dataType: 'text',
            contentType: 'application/json',
            success: function (response) {
                location.reload();
                var rec = JSON.parse(response);
                console.log(rec);
                var tracks = rec.Blacklist;
                var table = document.getElementById("blacklist");
            },
            error: function (xhr, status, error) {
                alert(status);
                alert(xhr.responseText + " " + song);
            }
        });
        }
    }

    function blacklist(x, reqID, trackTitle, trackArtist, trackSpot) {
        var i = x.parentNode.parentNode.rowIndex;
        var song = document.getElementById("Song_Json").rows[i].cells.item(0).innerHTML;
        var author = document.getElementById("Song_Json").rows[i].cells.item(1).innerHTML;
        var obj = {
            "track": {
                "id": reqID,
                "songName": trackTitle,
                "artistName": trackArtist,
                "image_small_url": "",
                "image_medium_url": "",
                "image_large_url": "",
                "webplayerlink": trackSpot
            }
        };
        var json = JSON.stringify(obj);
        if (confirm("Vil du blackliste " + song + " af " + author + "?")) {
            //  alert(reqID+ " " + trackTitle);
            $.ajax('https://localhost:44342/api/blacklist', {
                crossDomain: 'true',
                headers: { 'Access-Control-Allow-Origin': '*' },
                method: 'post',
                data: json,
                dataType: 'text',
                contentType: 'application/json',
                success: function (response) {
                    alert(response + "Success");
                },
                error: function (xhr, status, error) {
                    alert(status);
                }
            });
        }
    }

    function ClearTableAndInput() {
        var table = document.getElementById("Song_Json");
        for (var i = table.rows.length - 1; i > 0; i--) {
            table.deleteRow(i);
        }
        document.getElementById("SongName").value = "";
    }

    function Pfunc() {
        // 'https://isdisco-web-api.azurewebsites.net/api/spotify-track/search'
        if (document.getElementById("SongName").value == "") {
            return;
        }
        var song = "songname=" + document.getElementById("SongName").value;
        $.ajax('https://localhost:44342/api/spotify-track/search', {
            crossDomain: 'true',
            headers: { 'Access-Control-Allow-Origin': '*' },
            method: 'get',
            data: song,
            dataType: 'text',
            contentType: 'application/json',
            success: function (response) {
                alert(response);
                var rec = JSON.parse(response);
                var tracks = rec.Tracks
                ClearTableAndInput();
                tracks.forEach(function (entry) {
                    var id = "" + entry.Id ;
                    var songname = "" + entry.SongName;
                    var artist = "" + entry.ArtistName;
                    var webplayer = "" + entry.WebplayerLink;
                    console.log("id =" + id + ": \n songname =" + songname + ": \n artist =" + artist + ": \n webplayer =" + webplayer)
                    $("#Song_Json").append("<tr>" + "<td>" + songname + "</td>" + "<td>" + artist + "</td>" + "<td>" + "<a href=\"#\" title= \"blacklist song\" onclick=\"blacklist(this"+ ", '" + id + "', '" + songname + "', '" + artist + "', '" + webplayer + "')"+"\">" + "\n <img src= \"https://image.flaticon.com/icons/svg/61/61057.svg\" width=\"24\"/>" + "</tr>");                    
                });
            },

            error: function (xhr, status, error) {
                alert(status);
                alert(xhr.responseText + " " + song);

            }
        });

    }
</script>

<body onload="loadBlacklist()">
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" onclick="ClearTableAndInput()" data-toggle="modal" data-target="#basicExampleModal">
        <i class="fas fa-search"></i>
        Tilføj sange til Blacklist
    </button>

    <!-- Modal -->
    <div class="modal fade" id="basicExampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Blacklist sange</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div>

                        <!-- Search form -->
                          <!--  <input class="form-control" id="SongName" name="songname" type="text" placeholder="Søg" aria-label="Search"> -->
                            <input class="glyphicon-search" type="text" id="SongName" name="songname" placeholder="Søg" aria-label="Search" onkeyup="if (event.keyCode == 13) { document.getElementById('Search_Btn').click() } " />
                            <button id="Search_Btn" class="btn btn-primary" onclick="Pfunc()"> Søg </button>
                        <table name="Song_Json" id="Song_Json">
                            <tr>
                                <th>Sang</th>
                                <th>Kunstner</th>
                                <th>Blacklist Btn</th>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

<div class="row">
    <div class="col-md-12">
        <center>
            <h1>
                <b>
                    @ViewData["Title"]
                </b>
            </h1>
        </center>
        <table id="blacklist">
            <tr>
                <th>Sang</th>
                <th>Kunstner</th>
                <th>Mulighed</th>
                <th>ID</th>
            </tr>
        </table>
    </div>

    <!-- <h2>@ViewData["Title"]</h2>
    <h3>@ViewData["Message"]</h3>

    <p>Use this area to provide additionBl information.</p>
    -->
</body>