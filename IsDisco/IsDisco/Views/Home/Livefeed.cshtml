@{
    ViewData["Title"] = "Livefeed";
    
    Singleton instance = Singleton.getInstance();

    List<Request> requests = new List<Request>();

    //Init lists if they are empty
    if (!instance.GetTracks().Any<Track>())
    {
        instance.InitTracks();
        Console.WriteLine("InitTracks");

    }

    if (!instance.GetRequests().Any<Request>())
    {
        instance.InitRequests();
        requests = instance.GetRequests();
        Console.WriteLine("InitRequests");
    }
    else
    {
        requests = instance.GetRequests();
    }

    //Sorts the list so that the newest item is at the top
    requests.Sort((x, y) => -x.Since.CompareTo(y.Since));

}

<style>
    body {
        background-color: #e9ebee;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 95%;
        background-color: white;
        border-radius: 10px;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f4f5f4;
    }
</style>
<center>
    <div class="row">
        <div class="col-sm-12">
            <center>
                <h1>
                    <b>
                        @ViewData["Title"]
                    </b>
                </h1>
            </center>
            <div style="height:80vh;overflow-y:scroll; width: 95%">

                <table>
                    <tr>
                        <th>Sang</th>
                        <th>Kunstner</th>
                        <th>Ønsket af</th>
                        <th>Hvornår</th>
                        <th>Muligheder</th>
                    </tr>
                    @foreach (Request request in requests)
                    {
                        <tr>
                            <td>@request.Track.Title</td>
                            <td>@request.Track.Artist</td>
                            <td>@request.User.Name</td>
                            @if (DateTime.Now.Subtract(request.Since).Seconds < 60 && DateTime.Now.Subtract(request.Since).Minutes < 1 && DateTime.Now.Subtract(request.Since).Hours < 1)
                            {
                                TimeSpan time = DateTime.Now.Subtract(request.Since);
                                <td>@time.Seconds s siden</td>

                            }
                            else if (DateTime.Now.Subtract(request.Since).Minutes >= 1 && DateTime.Now.Subtract(request.Since).Hours < 1)
                            {
                                TimeSpan time = DateTime.Now.Subtract(request.Since);

                                <td>@time.Minutes m siden</td>
                            }
                            else if (DateTime.Now.Subtract(request.Since).Hours >= 1)
                            {
                                TimeSpan time = DateTime.Now.Subtract(request.Since);

                                <td>Mere end @time.Hours timer siden</td>
                            }
                            <td>Åben i Spotify</td>
                        </tr>
                    }

                </table>
            </div>
        </div>
    </div>
</center>

<h3>@ViewData["Message"]</h3>
