@{
    ViewData["Title"] = "Home Page";
    Singleton instance = Singleton.getInstance();
    instance.InitUsers();
    List<User> users = new List<User>();
    users = instance.GetUsers();


    List<Request> requests = new List<Request>();
    List<Request> something = new List<Request>();
    //Init lists if they are empty
    if (!instance.GetTracks().Any<Track>())
    {
        instance.InitTracks();
        Console.WriteLine("InitTracks");

    }

    if (!instance.GetRequests().Any<Request>())
    {
        instance.InitRequests();
        requests = instance.GetRequests();
        Console.WriteLine("InitRequests");
    }
    else
    {
        requests = instance.GetRequests();
    }

    requests.Sort((x, y) => x.Since.CompareTo(y.Since));

}
<style>
    body {
        background-color: #e9ebee;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 95%;
        background-color: white;
        border-radius: 10px;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f4f5f4;
    }
</style>

<div class="row">
    <div class="col-sm-6">
        <h1>Musik ønsker</h1>
        <div style="height:400px;overflow-y:scroll; width: 95%">

            <table>

                <tr>
                    <th>Navn</th>
                    <th>Sang</th>
                    <th>Kunstner</th>
                    <th>Tid siden</th>
                    <th>Upvotes</th>
                    <th>Muligheder</th>
                </tr>

                @foreach (var Req in requests)
    {
        if (something.Find(x => x.Track.Track_id.Contains(Req.Track.Track_id)) == null)
        {
            var query = from Request req in requests
                        where req.Track.Track_id.Contains(Req.Track.Track_id)
                        select req;
            foreach (Request r in query)
            {
                Req.Votes++;
            }
            something.Add(Req);
        }

    }

                @{
        something.Sort((x, y) => -x.Votes.CompareTo(y.Votes));
                }
                @foreach (var Request in something)
    {
            <tr>
                <td>@Request.User.Name </td>
                <td>@Request.Track.Title</td>
                <td>@Request.Track.Artist</td>
                @if (DateTime.Now.Subtract(Request.Since).Seconds < 60 && DateTime.Now.Subtract(Request.Since).Minutes < 1)
    {
        TimeSpan time = DateTime.Now.Subtract(Request.Since);
            <td>@time.Seconds s siden</td>

}
else if (DateTime.Now.Subtract(Request.Since).Minutes >= 1)
{
TimeSpan time = DateTime.Now.Subtract(Request.Since);
            <td>@time.Minutes m siden</td>
}
                <td> @(Request.Votes - 1) </td>
                <td><a href=@Request.Track.Spotify_webplayer_link target="_blank">Åben i Spotify</a></td>
            </tr>

}

            </table>
        </div>


<!--
<div class="row">
    <div class="col-xl-2">
        <h2>Application uses</h2>
        <ul>
            <li>Sample pages using ASP.NET Core MVC</li>
            <li>Theming using <a href="https://go.microsoft.com/fwlink/?LinkID=398939">Bootstrap</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>How to</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=398600">Add a Controller and View</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699315">Manage User Secrets using Secret Manager.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699316">Use logging to log a message.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699317">Add packages using NuGet.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699319">Target development, staging or production environment.</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Overview</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=518008">Conceptual overview of what is ASP.NET Core</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699320">Fundamentals of ASP.NET Core such as Startup and middleware.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=398602">Working with Data</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=398603">Security</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699321">Client side development</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699322">Develop on different platforms</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699323">Read more on the documentation site</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Run &amp; Deploy</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=517851">Run your app</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=517853">Run tools such as EF migrations and more</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=398609">Publish to Microsoft Azure Web Apps</a></li>
        </ul>
    </div>
</div>



    dummy table info.
     <tr>
        <td>Mark</td>
        <td>Job</td>
        <td>Otto</td>
        <td>10 s</td>
        <td>mdo</td>
    </tr>
    <tr>
        <td>Job</td>
        <td>Thomton</td>
        <td>Thomton</td>
        <td>30 s</td>
        <td>fat</td>
    </tr>


    -->
